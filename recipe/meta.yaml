{% set version = "1.11.0" %}
{% set sha256 = "58948cfd0d46ed5ff683b5337a5de43d3c46a922f55404c32d09a6375b4f3108" %}

package:
  name: cub
  version: {{ version }}

source:
  url: https://github.com/NVIDIA/cub/archive/{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 1
  script: mkdir -p "$PREFIX"/include && cp -r cub "$PREFIX"/include  # [not win]

requirements:
  run_constrained:
    - thrust {{ version }}.*

test:
  commands:
    - test -e "$PREFIX"/include/cub/cub.cuh  # [not win]
    - if not exist "%LIBRARY_INC%"\cub\cub.cuh exit 1  # [win]

about:
  home: https://github.com/thrust/cub
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.TXT
  summary: |
    CUB is a flexible library of cooperative threadblock primitives and other utilities for CUDA
    kernel programming.
  description: |
    CUB provides state-of-the-art, reusable software components for every layer of the CUDA
    programming model:
    - Parallel primitives
      - Warp-wide "collective" primitives
        - Cooperative warp-wide prefix scan, reduction, etc.
        - Safely specialized for each underlying CUDA architecture
      - Block-wide "collective" primitives
        - Cooperative I/O, sort, scan, reduction, histogram, etc.
        - Compatible with arbitrary thread block sizes and types
      - Device-wide primitives
        - Parallel sort, prefix scan, reduction, histogram, etc.
        - Compatible with CUDA dynamic parallelism
    - Utilities
      - Fancy iterators
      - Thread and thread block I/O
      - PTX intrinsics
      - Device, kernel, and storage management
  doc_url: http://nvlabs.github.io/cub/
  dev_url: https://github.com/thrust/cub

extra:
  recipe-maintainers:
    - rongou
    - kkraus14
    - leofang
